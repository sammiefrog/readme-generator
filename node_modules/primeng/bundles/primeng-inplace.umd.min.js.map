{"version":3,"sources":["ng://primeng/inplace/inplace.ts"],"names":["InplaceDisplay","__decorate","Component","selector","template","InplaceContent","Inplace","this","closeIcon","onActivate","EventEmitter","onDeactivate","prototype","activate","event","disabled","active","emit","deactivate","hover","onKeydown","which","preventDefault","Input","Output","changeDetection","ChangeDetectionStrategy","Default","InplaceModule","NgModule","imports","CommonModule","ButtonModule","exports","declarations"],"mappings":"wwBAAAA,EAAA,WAQA,SAAAA,KAA6B,OAAhBA,EAAcC,EAAA,CAJ1BC,EAAAA,UAAU,CACPC,SAAU,mBACVC,SAAU,+BAEDJ,GARb,gBAcA,SAAAK,KAA6B,OAAhBA,EAAcJ,EAAA,CAJ1BC,EAAAA,UAAU,CACPC,SAAU,mBACVC,SAAU,+BAEDC,mBAkBb,SAAAC,IAYaC,KAAAC,UAAoB,cAEnBD,KAAAE,WAAgC,IAAIC,EAAAA,aAEpCH,KAAAI,aAAkC,IAAID,EAAAA,aAyBpD,OArBIJ,EAAAM,UAAAC,SAAA,SAASC,GACAP,KAAKQ,WACNR,KAAKS,QAAS,EACdT,KAAKE,WAAWQ,KAAKH,KAI7BR,EAAAM,UAAAM,WAAA,SAAWJ,GACFP,KAAKQ,WACNR,KAAKS,QAAS,EACdT,KAAKY,OAAQ,EACbZ,KAAKI,aAAaM,KAAKH,KAI/BR,EAAAM,UAAAQ,UAAA,SAAUN,GACc,KAAhBA,EAAMO,QACNd,KAAKM,SAASC,GACdA,EAAMQ,mBApCLrB,EAAA,CAARsB,EAAAA,sCAEQtB,EAAA,CAARsB,EAAAA,wCAEQtB,EAAA,CAARsB,EAAAA,wCAEQtB,EAAA,CAARsB,EAAAA,qCAEQtB,EAAA,CAARsB,EAAAA,0CAEQtB,EAAA,CAARsB,EAAAA,yCAEStB,EAAA,CAATuB,EAAAA,2CAESvB,EAAA,CAATuB,EAAAA,6CAhBQlB,EAAOL,EAAA,CAhBnBC,EAAAA,UAAU,CACPC,SAAU,YACVC,SAAU,+sBAYVqB,gBAAiBC,EAAAA,wBAAwBC,WAEhCrB,mBAgDb,SAAAsB,KAA6B,OAAhBA,EAAa3B,EAAA,CALzB4B,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,aAAaC,EAAAA,cACvBC,QAAS,CAAC3B,EAAQN,EAAeK,EAAe2B,EAAAA,cAChDE,aAAc,CAAC5B,EAAQN,EAAeK,MAE7BuB","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from 'primeng/button';\n\n@Component({\n    selector: 'p-inplaceDisplay',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceDisplay {}\n\n@Component({\n    selector: 'p-inplaceContent',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceContent {}\n\n@Component({\n    selector: 'p-inplace',\n    template: `\n        <div [ngClass]=\"{'ui-inplace ui-widget': true, 'ui-inplace-closable': closable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-inplace-display\" (click)=\"activate($event)\" tabindex=\"0\" (keydown)=\"onKeydown($event)\"   \n                [ngClass]=\"{'ui-state-disabled':disabled}\" *ngIf=\"!active\">\n                <ng-content select=\"[pInplaceDisplay]\"></ng-content>\n            </div>\n            <div class=\"ui-inplace-content\" *ngIf=\"active\">\n                <ng-content select=\"[pInplaceContent]\"></ng-content>\n                <button type=\"button\" [icon]=\"closeIcon\" pButton (click)=\"deactivate($event)\" *ngIf=\"closable\"></button>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Inplace {\n\n    @Input() active: boolean;\n\n    @Input() closable: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Output() onActivate: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDeactivate: EventEmitter<any> = new EventEmitter();\n\n    hover: boolean;\n\n    activate(event?: Event) {\n        if (!this.disabled) {\n            this.active = true;\n            this.onActivate.emit(event);\n        }\n    }\n\n    deactivate(event?: Event) {\n        if (!this.disabled) {\n            this.active = false;\n            this.hover = false;\n            this.onDeactivate.emit(event);\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.which === 13) {\n            this.activate(event);\n            event.preventDefault();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [Inplace,InplaceDisplay,InplaceContent,ButtonModule],\n    declarations: [Inplace,InplaceDisplay,InplaceContent]\n})\nexport class InplaceModule { }\n"]}