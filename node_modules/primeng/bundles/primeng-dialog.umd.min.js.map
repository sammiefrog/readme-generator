{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","onResizeInit","onResizeEnd","id","_style","_position","transformOptions","Object","defineProperty","prototype","_responsive","console","log","_breakpoint","_visible","value","maskVisible","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","_this","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","contains","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","destroyed","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","getMaskClass","maskClass","ui-dialog-mask","ui-widget-overlay","ui-dialog-visible","ui-dialog-mask-scrollblocker","getPositionClass","toString","pos","find","item","position","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","onKeydown","which","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","width","height","endDrag","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","resizeEnd","bindGlobalListeners","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentDragListener","bind","window","addEventListener","removeEventListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","ChangeDetectorRef","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","Default","DialogModule","NgModule","imports","CommonModule","FocusTrapModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef,ViewRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule} from 'primeng/api';\nimport {FocusTrapModule} from 'primeng/focustrap';\n\nlet idx: number = 0;\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\n    selector: 'p-dialog',\n    template: `\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable, 'ui-dialog-maximized': maximized}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                    <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                        <ng-content select=\"p-header\"></ng-content>\n                    </span>\n                    <div class=\"ui-dialog-titlebar-icons\">\n                        <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\">\n                            <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                        </a>\n                        <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span [class]=\"closeIcon\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n                    <ng-content></ng-content>\n                </div>\n                <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n                <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Dialog implements OnDestroy {\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n    @Input() positionLeft: number;\n\n    @Input() positionTop: number;\n\n    @Input() contentStyle: any;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() get responsive(): boolean {\n        return false;\n    };\n\n    set responsive(_responsive: boolean) {\n        console.log(\"Responsive property is deprecated.\");\n    }\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() maskStyleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() get breakpoint(): number {\n        return 649;\n    };\n\n    set breakpoint(_breakpoint: number) {\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\n    }\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() keepInViewport: boolean = true;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\n\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\n\n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;\n\n    lastPageY: number;\n\n    preventVisibleChangePropagation: boolean;\n\n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `ui-dialog-${idx++}`;\n\n    _style: any = {};\n\n    _position: string = \"center\";\n\n    originalStyle: any;\n\n    transformOptions: any = \"scale(0.7)\";\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n\n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n    }\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    @Input() get position(): string {\n        return this._position;\n    };\n\n    set position(value: string) {\n        this._position = value;\n\n        switch (value) {\n            case 'topleft':\n            case 'bottomleft':\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n            break;\n            case 'topright':\n            case 'bottomright':\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n            break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n            break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n            break;\n            default:\n                this.transformOptions = \"scale(0.7)\";\n            break;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'button');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    enableModality() {\n        if (this.closable && this.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\n                if (!this.container.isSameNode(event.target) && !this.container.contains(event.target)) {\n                    this.close(event);\n                }\n            });\n        }\n\n        if (this.modal) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.modal) {\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            }\n\n            if (!(this.cd as ViewRef).destroyed) {\n                this.cd.detectChanges();\n            }\n        }\n    }\n\n    maximize() {\n        this.maximized = !this.maximized;\n\n        if (!this.modal && !this.blockScroll) {\n            if (this.maximized)\n                DomHandler.addClass(document.body, 'ui-overflow-hidden');\n            else\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    getMaskClass() {\n        let maskClass = {'ui-dialog-mask': true, 'ui-widget-overlay': this.modal, 'ui-dialog-visible': this.maskVisible, 'ui-dialog-mask-scrollblocker': this.modal || this.blockScroll};\n        maskClass[this.getPositionClass().toString()] = true;\n        return maskClass;\n    }\n\n    getPositionClass() {\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n        const pos = positions.find(item => item === this.position);\n\n        return pos ? `ui-dialog-${pos}` : '';\n    }\n\n    initDrag(event: MouseEvent) {\n        if (DomHandler.hasClass(event.target, 'ui-dialog-titlebar-icon') ||Â DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'ui-dialog-titlebar-icon')) {\n            return;\n        }\n\n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.focusTrap) {\n            if (event.which === 9) {\n                event.preventDefault();\n\n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!document.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            if (this.keepInViewport) {\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                    this._style.left = leftPos + 'px';\n                    this.lastPageX = event.pageX;\n                    this.container.style.left = leftPos + 'px';\n                }\n\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                    this._style.top = topPos + 'px';\n                    this.lastPageY = event.pageY;\n                    this.container.style.top = topPos + 'px';\n                }\n            }\n            else {\n                this.lastPageX = event.pageX;\n                this.container.style.left = leftPos + 'px';\n                this.lastPageY = event.pageY;\n                this.container.style.top = topPos + 'px';\n            }\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.draggable) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n            this.onResizeInit.emit(event);\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    resizeEnd(event) {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n            this.onResizeEnd.emit(event);\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n\n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n\n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if (this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.resizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.wrapper);\n            else\n                DomHandler.appendChild(this.wrapper, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.wrapper);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.onShow.emit({});\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n\n                if (this.modal) {\n                    this.enableModality();\n                }\n\n                if (!this.modal && this.blockScroll) {\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\n                }\n\n                if (this.focusOnShow) {\n                    this.focus();\n                }\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        this.maskVisible = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            this.maximized = false;\n        }\n\n        if (this.modal) {\n            this.disableModality();\n        }\n\n        if (this.blockScroll) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.container = null;\n        this.wrapper = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,FocusTrapModule],\n    exports: [Dialog,SharedModule],\n    declarations: [Dialog]\n})\nexport class DialogModule { }\n"]}