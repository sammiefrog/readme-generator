{"version":3,"file":"primeng-messages.js","sources":["ng://primeng/messages/messages.ts","ng://primeng/messages/primeng-messages.ts"],"sourcesContent":["import {NgModule,Component,OnInit,OnDestroy,Input,Output,EventEmitter,Optional,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {Message} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'p-messages',\n    template: `\n        <div *ngIf=\"hasMessages()\" class=\"ui-messages ui-widget ui-corner-all\"\n                    [ngClass]=\"getSeverityClass()\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n            <a tabindex=\"0\" class=\"ui-messages-close\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" *ngIf=\"closable\">\n                <i class=\"pi pi-times\"></i>\n            </a>\n            <span class=\"ui-messages-icon pi\" [ngClass]=\"icon\"></span>\n            <ul>\n                <li *ngFor=\"let msg of value\">\n                    <div *ngIf=\"!escape; else escapeOut\">\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\" [innerHTML]=\"msg.summary\"></span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\" [innerHTML]=\"msg.detail\"></span>\n                    </div>\n                    <ng-template #escapeOut>\n                        <span *ngIf=\"msg.summary\" class=\"ui-messages-summary\">{{msg.summary}}</span>\n                        <span *ngIf=\"msg.detail\" class=\"ui-messages-detail\">{{msg.detail}}</span>\n                    </ng-template>\n                </li>\n            </ul>\n        </div>\n    `,\n    animations: [\n        trigger('messageAnimation', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(-25%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    opacity: 0,\n                    transform: 'translateY(-25%)'\n                }))\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Messages implements OnInit, OnDestroy {\n\n    @Input() value: Message[];\n\n    @Input() closable: boolean = true;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() enableService: boolean = true;\n\n    @Input() key: string;\n\n    @Input() escape: boolean = true;\n\n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    constructor(@Optional() public messageService: MessageService, public el: ElementRef) {}\n\n    ngOnInit() {\n        if (this.messageService && this.enableService) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages: any) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                }\n            });\n\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n            });\n        }\n    }\n\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.value && this.value.length > 0;\n        }\n\n        return false;\n    }\n\n    getSeverityClass() {\n        const msg = this.value[0];\n        if (msg) {\n            const severities = ['info', 'warn', 'error', 'success'];\n            const severity = severities.find(item => item === msg.severity);\n\n            return severity && `ui-messages-${severity}`;\n        }\n\n        return null;\n    }\n\n    clear(event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n\n        event.preventDefault();\n    }\n\n    get icon(): string {\n        let icon: string = null;\n        if (this.hasMessages()) {\n            let msg = this.value[0];\n            switch(msg.severity) {\n                case 'success':\n                    icon = 'pi-check';\n                break;\n\n                case 'info':\n                    icon = 'pi-info-circle';\n                break;\n\n                case 'error':\n                    icon = 'pi-times';\n                break;\n\n                case 'warn':\n                    icon = 'pi-exclamation-triangle';\n                break;\n\n                default:\n                    icon = 'pi-info-circle';\n                break;\n            }\n        }\n\n        return icon;\n    }\n\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Messages],\n    declarations: [Messages]\n})\nexport class MessagesModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IA6EI,kBAA+B,cAA8B,EAAS,EAAc;QAArD,mBAAc,GAAd,cAAc,CAAgB;QAAS,OAAE,GAAF,EAAE,CAAY;QAtB3E,aAAQ,GAAY,IAAI,CAAC;QAMzB,kBAAa,GAAY,IAAI,CAAC;QAI9B,WAAM,GAAY,IAAI,CAAC;QAEvB,0BAAqB,GAAW,gBAAgB,CAAC;QAEjD,0BAAqB,GAAW,eAAe,CAAC;QAE/C,gBAAW,GAA4B,IAAI,YAAY,EAAa,CAAC;KAMS;IAExF,2BAAQ,GAAR;QAAA,iBAyBC;QAxBG,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,UAAC,QAAa;gBACnF,IAAI,QAAQ,EAAE;oBACV,IAAI,QAAQ,YAAY,KAAK,EAAE;wBAC3B,IAAI,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAA,CAAC,CAAC;wBAChE,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,YAAO,KAAI,CAAC,KAAK,EAAK,gBAAgB,aAAQ,gBAAgB,CAAC,CAAC;qBAC1F;yBACI,IAAI,KAAI,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,EAAE;wBAChC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,YAAO,KAAI,CAAC,KAAK,EAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACzE;iBACJ;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAA,GAAG;gBACpE,IAAI,GAAG,EAAE;oBACL,IAAI,KAAI,CAAC,GAAG,KAAK,GAAG,EAAE;wBAClB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;qBACrB;iBACJ;qBACI;oBACD,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACrB;aACJ,CAAC,CAAC;SACN;KACJ;IAED,8BAAW,GAAX;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC;QACnD,IAAI,QAAQ,IAAI,QAAQ,CAAC,YAAY,EAAE;YACnC,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SAC9C;QAED,OAAO,KAAK,CAAC;KAChB;IAED,mCAAgB,GAAhB;QACI,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,GAAG,EAAE;YACL,IAAM,UAAU,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YACxD,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,KAAK,GAAG,CAAC,QAAQ,GAAA,CAAC,CAAC;YAEhE,OAAO,QAAQ,IAAI,iBAAe,QAAU,CAAC;SAChD;QAED,OAAO,IAAI,CAAC;KACf;IAED,wBAAK,GAAL,UAAM,KAAK;QACP,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;IAED,sBAAI,0BAAI;aAAR;YACI,IAAI,IAAI,GAAW,IAAI,CAAC;YACxB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,QAAO,GAAG,CAAC,QAAQ;oBACf,KAAK,SAAS;wBACV,IAAI,GAAG,UAAU,CAAC;wBACtB,MAAM;oBAEN,KAAK,MAAM;wBACP,IAAI,GAAG,gBAAgB,CAAC;wBAC5B,MAAM;oBAEN,KAAK,OAAO;wBACR,IAAI,GAAG,UAAU,CAAC;wBACtB,MAAM;oBAEN,KAAK,MAAM;wBACP,IAAI,GAAG,yBAAyB,CAAC;wBACrC,MAAM;oBAEN;wBACI,IAAI,GAAG,gBAAgB,CAAC;wBAC5B,MAAM;iBACT;aACJ;YAED,OAAO,IAAI,CAAC;SACf;;;OAAA;IAED,8BAAW,GAAX;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACxC;KACJ;;gBA/F8C,cAAc,uBAAhD,QAAQ;gBAAqD,UAAU;;IAxB3E;QAAR,KAAK,EAAE;2CAAkB;IAEjB;QAAR,KAAK,EAAE;8CAA0B;IAEzB;QAAR,KAAK,EAAE;2CAAY;IAEX;QAAR,KAAK,EAAE;gDAAoB;IAEnB;QAAR,KAAK,EAAE;mDAA+B;IAE9B;QAAR,KAAK,EAAE;yCAAa;IAEZ;QAAR,KAAK,EAAE;4CAAwB;IAEvB;QAAR,KAAK,EAAE;2DAAkD;IAEjD;QAAR,KAAK,EAAE;2DAAiD;IAE/C;QAAT,MAAM,EAAE;iDAAsE;IApBtE,QAAQ;QA5CpB,SAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,82CAqBT;YACD,UAAU,EAAE;gBACR,OAAO,CAAC,kBAAkB,EAAE;oBACxB,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC;wBACnB,SAAS,EAAE,eAAe;wBAC1B,OAAO,EAAE,CAAC;qBACb,CAAC,CAAC;oBACH,UAAU,CAAC,WAAW,EAAE;wBACpB,KAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;wBAClD,OAAO,CAAC,0BAA0B,CAAC;qBACtC,CAAC;oBACF,UAAU,CAAC,WAAW,EAAE;wBACpB,OAAO,EAAE,0BAA0B,GAAG,KAAK,CAAC;4BACxC,OAAO,EAAE,CAAC;4BACV,SAAS,EAAE,kBAAkB;yBAChC,CAAC,CAAC;qBACN,CAAC;iBACL,CAAC;aACL;YACD,eAAe,EAAE,uBAAuB,CAAC,OAAO;SACnD,CAAC;QA2Be,WAAA,QAAQ,EAAE,CAAA;OA1Bd,QAAQ,CA0HpB;IAAD,eAAC;CA1HD,IA0HC;;IAOD;KAA+B;IAAlB,cAAc;QAL1B,QAAQ,CAAC;YACN,OAAO,EAAE,CAAC,YAAY,CAAC;YACvB,OAAO,EAAE,CAAC,QAAQ,CAAC;YACnB,YAAY,EAAE,CAAC,QAAQ,CAAC;SAC3B,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAA/B;;ACpLA;;GAEG;;;;"}